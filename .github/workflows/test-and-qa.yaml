name: test-and-qa

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  TestAndQaJobs:
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      - uses: actions/checkout@v3

      - name: Copy .env.test.local
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Check CS-Fixer
        run: composer cs:check

      - name: Check PHPStan
        run: composer phpstan

  container-test-job:
    runs-on: ubuntu-latest
    container: ubuntu
    # from https://ldarren.medium.com/number-of-ways-to-setup-database-in-github-actions-2cd48df9faae
    services:
      db:
        image: mariadb:10.10.2
        env:
          MYSQL_ROOT_PASSWORD: 'pimcore'
          MYSQL_DATABASE: 'pimcore_test'
          MYSQL_USER: 'pimcore'
          MYSQL_PASSWORD: 'pimcore'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      - uses: actions/checkout@v3

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: composer tests
